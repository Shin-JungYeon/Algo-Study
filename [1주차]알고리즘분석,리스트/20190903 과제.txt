알고리즘 분석
- 컴퓨터 과학에서 알고리즘을 실행하는데 필요한 (시간과 기억 용량과 같은) 자원의 수를 결정하는 일.
- 점근적(asymptotic) 의미로 복잡도를 계산 : O표기법, Ω표기법, Θ표기법. 일정 크기의 입력 자료에 대한 복잡도 함수를 구함.

알고리즘의 성능분석 요소
1. 공간 복잡도(Space Complexity) : 알고리즘에 사용되는 메모리 공간의 총량. 메모리 사용량에 대한 분석 결과.
    - n개의 배열요소를 가지는 list를 매개변수로 받을 경우 공간 복잡도는 n+1(배열요소 n개 + temp변수의 공간 1개)
    - n*m 배열을 받았을 경우 공간 복잡도는 n*m 배열을 받았을 경우 공간 복잡도는 n*m+1

2. 시간 복잡도(Time Complexity) : 알고리즘에 사용되는 연산횟수의 총량. 속도에 대한 분석 결과.
    - 단위는 시간이 아닌 시행횟수.
    - 실행 시간으로 계산할 경우 측정을 위한 완성된 프로그램이 필요. 모든 플랫폼에서 동일한 결과를 산출하지 못함.
    - 연산 횟수로 계산할 경우 실행이 필요하지 않음. h/w, s/w 가 필요하지 않음. 모든 플랫폼에서 동일한 결과 산출.





자료구조
1. List
    - 자료를 순서대로 한 줄로 저장하는 자료구조.
    - 여러 자료가 일직선으로 서로 연결된 선형 구조.
    - 제일 처음 데이터 : Head
    - 제일 마지막 데이터 : Tail
    1) 구현 방식에 따라
         - Array List : 데이터에 접근, 정렬에 용이. 만일 중간 데이터가 삭제되면 메모리의 모든 비트가 이동되어야 함.
         - Linked List : 하나의 노드에 두 개의 필드 존재. 하나는 value, 하나는 다음 노드와 연결. 중간에 삽입, 삭제가 용이.
    2) Linked List 사용 방식에 따라
         - Simple List : header -> ㅁ -> ㅁ -> ㅁ -> null
         - Doubly List : header -> ㅁ <-> ㅁ <-> ㅁ <-> null
         - Circular List : header -> ㅁ -> ㅁ -> ㅁ -> header

2. Stack
    - 한 쪽 끝이 막혀 있어서 자료를 한 방향으로만 쌓는 자료구조.
    - First In Last Out (FILO)
    - PUSH : 스택에 자료를 넣는 것.
    - POP : 스택에서 자료를 빼내는 것.
    - TOP : 스택에서 제일 위에 있는 자료.
    - BOTTOM : 스택에서 제일 아래에 있는 자료.
    - 스택이 담을 수 있는 사이즈 이상을 PUSH 하면 Overflow 발생.
    - 자료가 전부 POP되고 자료가 더이상 없는 공백 상태에서 POP이 호출되면 Underflow 발생.
    - 스택의 구현은 Array List, Linked List로 구현 가능.

3. Queue

4. Tree

5. Graph
